# -*- coding: utf-8 -*-
"""Finacial Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L2hoPc9kfl_oKaTjhjQeKnNBhVh5MLil
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import IsolationForest
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report

df=pd.read_csv('/content/drive/MyDrive/Synthetic_Financial_datasets_log.csv')
df.head()

df.info()

df=df.drop(['nameOrig','nameDest','isFlaggedFraud'],axis=1)

df.isnull().sum()

df.describe()

sns.countplot(x='isFraud',data=df)
plt.title('Fraud  Vs Non-Fraud')
plt.xlabel('isFraud')
plt.ylabel('count')
plt.show()

sns.countplot(data=df, x='type', hue='isFraud', palette='magma')
plt.title('Transaction Types by Fraud Status')
plt.xlabel('Transaction Type')
plt.ylabel('Count')
plt.legend(title='Is Fraud', loc='upper right')
plt.show()

df = pd.get_dummies(df, columns=['type'], drop_first=True)

x=df.drop(['isFraud'],axis=1)
y=df['isFraud']

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

len(x_train)

len(x_test)

model=IsolationForest(contamination=0.05)
model.fit(x_train)

prediction=model.predict(x_test)

result=pd.DataFrame(prediction,columns=['Fraud_Prediction'])

df.head()

dtree=DecisionTreeClassifier()
dtree.fit(x_train,y_train)

y_pred=dtree.predict(x_test)

print(classification_report(y_test,y_pred))

print(confusion_matrix(y_test,y_pred))

accuracy=accuracy_score(y_test,y_pred)
print(f'Accuracy:{accuracy}')







